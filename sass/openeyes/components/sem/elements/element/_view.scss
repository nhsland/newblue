// ** Copyright (C) 2018, OpenEyes Foundation. This file is part of OpenEyes. 
// ** OpenEyes is free software; and is distributed, WITHOUT ANY WARRANTY under the terms of AGPL 3.0 licence.
//

// OE Element - VIEW
//
// Specific element view classes 
// Elements in VIEW mode require mostly typographic treatment 
// to increase of legabilty of data.

.main-event {
	.element {
		
		// adjust padding for 'tile' elements
		&.tile {
			.element-data {
				&.full-width {
			 		padding-right:10px; 
			 		padding-left:0;
				}
			}
		}
		
		// prioritise element data
		&.priority {
			background-color: $oe-bg-highlight;
			
			// if an element is priorities increase large text font-weight
			.element-data {
				.large-text, 
				.priority-text {
					font-weight:$oe-font-medium;
				}	
			}
			
			// if it has both sides in a split:
			.element-both-eyes {
				background-color: $oe-bg-highlight;
			}	
		}
		
		// element-data is ONLY used in VIEW mode (edit uses 'element-fields')
		.element-data {
			
			// adjust the padding to match eye sides elements.
			&.full-width {
			 	padding-right:20px; // 20px matches the edit space (thinking of inline editing!)
				padding-left:10px;
			}
			
			// large text if needed, matches Element header size
			.large-text {
				@include font-size(14);
				font-weight:inherit;	
			}
			
			// priority text (next level up from large)
			.priority-text {
				@include font-size(16);
				font-weight:$oe-font-medium;	
			}
			
			// table style is slightly differnt in VIEW 
			table {
				width:100%;
			}
			
			// keeping data-value as a useful hook
			// but this could be easily de-coupled.
			.data-value {
				&.not-recorded {
					margin:0 0 0 0;
					text-align: center;
					@include font-size(14);
					font-weight:$oe-font-light;
					opacity:0.6;
					
				}
			}
			
			// only used rarely but an option to have a sub-header
			// e.g. see http://idg.knowego.com/v3.0-SEM/_view-elements
			h3 {
				@include font-size(14); // match title
				color:$oe-element-headers;
				font-weight:$oe-font-light;
			}
		}
		
		// listview expand / collapse
		// this was previous handled with: flex-layout and flex-top
		// but seems more ellegant to cover with a specific class
		.listview-expand-collapse {
			display:flex;
			align-items:flex-start;
			justify-content:space-between;
			
			// does nothing, as positioned with flex (above)
			// but a useful hook if we want to use absolute
			// .expand-collapse-icon-btn {}
			
			// CSS hooks for the different views
			// not used in UI but useful in PRINT!
			// .listview-pro {}
			// .listview-full {}
		}
		
				
	}
}
