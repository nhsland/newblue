// ** Copyright (C) 2018, OpenEyes Foundation. This file is part of OpenEyes. 
// ** OpenEyes is free software; and is distributed, WITHOUT ANY WARRANTY under the terms of AGPL 3.0 licence.
//

// Create REM font-sizes. based on 16px base font-size
// @access public
// @param {sizePixel} $sizePixel - size as px
@mixin font-size($sizePixel) {
  font-size: ($sizePixel / 16) + rem;
}

// Media query wrapper
@mixin media($width) {
  @media only screen and (min-width: $width) {
    @content;
  }
}

// IPad 3+, portrait
@mixin ipad() {
	@media only screen 
		and (min-device-width: 768px) 
		and (max-device-width: 1024px) 
		and (orientation: portrait) 
		and (-webkit-min-device-pixel-ratio: 2) {
		@content;
	}	
}

// ------------------------------ Patterns
// Flex
@mixin flex($horizontal,$vertical){
	display:flex;
	justify-content: $horizontal;
	align-items: $vertical;	
}

// standardise box-shadows for popups
@mixin boxshadow(){
	// offset-x | offset-y | blur-radius | spread-radius | color
	box-shadow: 1px 1px 2px 2px rgba(0, 0, 0, 0.2);
}


// ------------------------------ CSS Tricks

/// Slightly lighten a color
/// @param {Color} $color - color to tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

/// Slightly darken a color
/// @param {Color} $color - color to shade
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}


// ------------------------------ Inputs and Buttons

$oe-selector-form-input-fields: 'input[type="text"],input[type="password"],input[type="date"],input[type="datetime"],input[type="datetime-local"],input[type="month"],input[type="week"],input[type="email"],input[type="number"],input[type="search"],input[type="tel"],input[type="time"],input[type="url"],textarea';
$oe-selector-form-button-fields: 'button, .button, input[type="submit"]';
$oe-selector-form-select-fields: "select";

// Apply a set of rules to input form fields.
@mixin input-form-fields {
	#{$oe-selector-form-input-fields} {
		@content;
	}
}

// Apply a set of rules to button form fields.
@mixin button-form-fields {
	#{$oe-selector-form-button-fields} {
		@content;
	}
}

// Apply a set of rules to select form fields.
@mixin select-form-fields {
	#{$oe-selector-form-select-fields} {
		@content;
	}
}

// Apply a set of rules for all form fields.
@mixin all-form-fields {
	#{$oe-selector-form-input-fields},
	#{$oe-selector-form-button-fields},
	#{$oe-selector-form-select-fields} {
		@content;
	}
}

// Apply a set of rules to buttons.
@mixin buttons {
	button, .button, input[type="submit"] {
		@content;
	}
}




